from django.shortcuts import render, redirect, get_object_or_404
from django.utils import timezone
from django.urls import reverse

from . models import *

from django.http import HttpResponse, HttpResponseRedirect

from django.views.decorators.csrf import csrf_exempt

from .forms import PostForm
from django.contrib.auth.models import User
from django.contrib import auth

import os, requests

# Create your views here.

def front(request) :
    #user_id = request.session['user']
    #user_name = request.session['name']
    #print(user_name)
    todos=Todo.objects.all()
    content={'todos':todos}
    return render(request, 'mainpage/main.html', content)

# Create your views here.
def index(request):
    return redirect(login)
    #return render(request, 'mainpage/login.html', {})

def createTodo(request):
    user_input_str = request.POST['todoContent']
    new_todo=Todo(content=user_input_str)
    new_todo.save()
    return redirect(front)
    #return HttpResponseRedirect(reverse('front'))

def doneTodo(request):
    done_todo_id=request.GET['todoNum']
    #print("완료한 todo의 id", done_todo_id)
    todo=Todo.objects.get(id=done_todo_id)
    todo.delete()
    return redirect(front)
    #return HttpResponseRedirect(reverse('front'))

def notice_list(request) :
    res = requests.get('http://' + os.environ.get('PROJECT_IP') + ':' + os.environ.get('PROJECT_PORT') + '/proj/notice_list/')
    for post in res.json() :
        print(post.title)
    return render(request, 'projpage/notice_list.html', {'posts' : posts})

def getProjectDetails(request) :
    res = requests.get('http://' + os.environ.get('PROJECT_IP') + ':' + os.environ.get('PROJECT_PORT') + '/proj/notice_list/')
    posts = { i : res.json()[i] for i in range(0, len(res.json()) ) }
    print(type(posts))
    return posts

def gotoProj(request) :
    posts = getProjectDetails(request)
    #if(request.method == 'POST') :
    #contents = request.Get.get('posts')
    print(contents)
    return render(request, 'mainpage/project_detail.html', posts)


@csrf_exempt
def notice_new(request):
    if request.method == "POST":
        form = PostForm(request.POST)
        if form.is_valid():
            post = form.save(commit=False)
            #post.author = request.session['name']
            post.created_date = timezone.now()
            post.save()
            return redirect('notice_list')
    else:
        form = PostForm()
    return render(request, 'projpage/notice_edit.html', {'form': form})

@csrf_exempt
def notice_edit(request, pk):
    post = get_object_or_404(Post, pk=pk)
    if request.method == "POST":
        form = PostForm(request.POST, instance=post)
        if form.is_valid():
            post = form.save(commit=False)
            post.author = request.session['name']
            post.created_date = timezone.now()
            post.save()
            return redirect('notice_detail')
    else:
        form = PostForm(instance=post)
    return render(request, 'mainpage/notice_edit.html', {'form': form})

def notice_detail(request, pk):
    post = get_object_or_404(Post, pk=pk)
    return render(request, 'mainpage/notice_detail.html', {'post': post})

def gotoChat(request) :
    return redirect('http://52.231.32.252:9003/chat.html')

@csrf_exempt
def login(request) :
    if  request.method == "POST" :
        username = request.POST['username']
        password = request.POST['password']
        user = auth.authenticate(request, username=username, password=password)

        if user is not None :
            auth.login(request, user)
            request.session['user'] = user.username
            request.meothd = "GET"
            print('login success')
            return redirect(front)
        else :
            print('login error')
            return render(request, 'mainpage/login.html', {'error' : 'username or password is incorrect'})

    else :
        return render(request, 'mainpage/login.html')
